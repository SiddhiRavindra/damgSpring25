{
	"name": "dataflowLocation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "GeoData",
						"type": "DatasetReference"
					},
					"name": "sourceStage"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTableLocation",
						"type": "DatasetReference"
					},
					"name": "sinkLocation"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn"
				},
				{
					"name": "surrogateKeyLocation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          state_fips as short,",
				"          state as string,",
				"          state_abbr as string,",
				"          zipcode as string,",
				"          county as string,",
				"          city as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourceStage",
				"surrogateKeyLocation derive(DI_JOB_ID = \"10\",",
				"          DI_LOAD_DT = currentTimestamp()) ~> derivedColumn",
				"sourceStage keyGenerate(output(LOCATION_SK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKeyLocation",
				"derivedColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          LOCATION_SK as string,",
				"          CITY as string,",
				"          STATE as string,",
				"          STATE_ABBR as string,",
				"          ZIP_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> sinkLocation"
			]
		}
	}
}