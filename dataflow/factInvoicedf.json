{
	"name": "factInvoicedf",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "salesDataStgST",
						"type": "DatasetReference"
					},
					"name": "sourceSalesDataStg"
				},
				{
					"dataset": {
						"referenceName": "DimCustomerST",
						"type": "DatasetReference"
					},
					"name": "sourceCustomer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "factInvoiceST",
						"type": "DatasetReference"
					},
					"name": "sink"
				},
				{
					"dataset": {
						"referenceName": "factInvoiceST",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "DimCustomerST",
						"type": "DatasetReference"
					},
					"name": "sink3Dim"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "split"
				},
				{
					"name": "derivedColumn4"
				}
			],
			"scriptLines": [
				"source(output(",
				"          INVOICE_ID as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          INVOICE_DATE as date,",
				"          SHIP_TO as string,",
				"          SHIP_TO_CITY as string,",
				"          SHIP_TO_COUNTRY as string,",
				"          SALESPERSON_PERSON_ID as decimal(38,0),",
				"          SALESPERSON_NAME as string,",
				"          TOTAL_PRODUCT_CNT as decimal(38,0),",
				"          TOTAL_PRODUCT_COST as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceSalesDataStg",
				"source(output(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> sourceCustomer",
				"surrogateKey1, sourceCustomer lookup(sourceSalesDataStg@CUSTOMER_ID == sourceCustomer@CUSTOMER_ID,",
				"     multiple: true,",
				"     broadcast: 'auto',",
				"     pickup: 'any')~> lookup1",
				"split@matchedRows derive(inferred_flag = iif(isNull(split@matchedRows@CUSTOMER_ID),1,0),",
				"          CUSTOMER_NAME = CUSTOMER_NAME) ~> derivedColumn2",
				"sourceSalesDataStg keyGenerate(output(rownum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"lookup1 split(!isNull(CUSTOMER_SK),",
				"     isNull(CUSTOMER_SK),",
				"     disjoint: true) ~> split@(matchedRows, unmacthedRows)",
				"split@unmacthedRows derive(PID = uuid(),",
				"          DI_CREATEDDT = currentTimestamp(),",
				"          CUSTOMER_NAME = iifNull(CUSTOMER_NAME,'UNKNOWN')) ~> derivedColumn4",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          INVOICE_SK as decimal(38,0),",
				"          INVOICE_ID as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          INVOICE_DT as date,",
				"          TOTAL_PRODUCT_CNT as decimal(38,0),",
				"          TOTAL_PRODUCT_COST as double,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          INVOICE_SK = rownum,",
				"          INVOICE_ID,",
				"          CUSTOMER_ID = split@matchedRows@CUSTOMER_ID,",
				"          INVOICE_DT = INVOICE_DATE,",
				"          TOTAL_PRODUCT_CNT,",
				"          TOTAL_PRODUCT_COST",
				"     )) ~> sink",
				"derivedColumn4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          INVOICE_SK as decimal(38,0),",
				"          INVOICE_ID as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          INVOICE_DT as date,",
				"          TOTAL_PRODUCT_CNT as decimal(38,0),",
				"          TOTAL_PRODUCT_COST as double,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          INVOICE_SK = rownum,",
				"          INVOICE_ID,",
				"          CUSTOMER_ID = split@unmacthedRows@CUSTOMER_ID,",
				"          INVOICE_DT = INVOICE_DATE,",
				"          TOTAL_PRODUCT_CNT,",
				"          TOTAL_PRODUCT_COST,",
				"          DI_CREATEDDT,",
				"          PID",
				"     )) ~> sink2",
				"derivedColumn4 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUSTOMER_SK = rownum,",
				"          CUSTOMER_ID = split@unmacthedRows@CUSTOMER_ID,",
				"          CUSTOMER_NAME,",
				"          DI_CREATEDDT,",
				"          PID",
				"     )) ~> sink3Dim"
			]
		}
	}
}